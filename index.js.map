{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = '49333964-3aa2fa57d2af3ff070f171ad2';\nconst MAIN_URL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async searchQuery => {\n  try {\n    const response = await axios.get(MAIN_URL, {\n      params: {\n        key: API,\n        q: searchQuery,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n    return response.data.hits;\n  } catch (error) {\n    console.log('Error fetching images:', error);\n  }\n  return [];\n};\n","import iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'data-description',\n  captionPosition: 'bottom',\n  captionDelay: 0,\n});\n\nexport const renderImg = images => {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n\n  showLoader();\n\n  if (images.length === 0) {\n    return;\n  }\n\n  images.forEach(image => {\n    const galleryItem = document.createElement('li');\n    galleryItem.classList.add('gallery-item');\n\n    const imgElement = document.createElement('img');\n    imgElement.src = image.webformatURL;\n    imgElement.alt = image.tags;\n\n    const linkElement = document.createElement('a');\n    linkElement.href = image.largeImageURL;\n    linkElement.dataset.description = image.tags;\n    linkElement.appendChild(imgElement);\n\n    const description = document.createElement('p');\n    description.classList.add('description');\n    description.textContent = image.tags;\n\n    const infoBox = document.createElement('div');\n    infoBox.classList.add('info-box');\n    infoBox.innerHTML = `\n      <p><strong>Likes:</strong> <span class=\"info-value\">${image.likes}</span></p>\n      <p><strong>Views:</strong> <span class=\"info-value\">${image.views}</span></p>\n      <p><strong>Comments:</strong> <span class=\"info-value\">${image.comments}</span></p>\n      <p><strong>Downloads:</strong> <span class=\"info-value\">${image.downloads}</span></p>\n    `;\n\n    galleryItem.appendChild(linkElement);\n    galleryItem.appendChild(infoBox);\n    gallery.appendChild(galleryItem);\n  });\n\n  lightbox.refresh();\n  hideLoader();\n};\n\nexport const showLoader = () => {\n  const loader = document.getElementById('loader');\n  loader.style.display = 'block';\n};\n\nexport const hideLoader = () => {\n  const loader = document.getElementById('loader');\n  loader.style.display = 'none';\n};\n\nexport const errorMessage = () => {\n  iziToast.error({\n    title: 'Error',\n    message:\n      'Sorry, there are no images matching your search query. Please try again!',\n    position: 'topRight',\n  });\n};\n","import { fetchImages } from './js/pixabay-api.js';\nimport {\n  renderImg,\n  showLoader,\n  hideLoader,\n  errorMessage,\n} from './js/render-functions.js';\nimport iziToast from 'izitoast';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  const searchQuery = event.target['search-text'].value.trim();\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n  if (searchQuery === '') {\n    iziToast.error({\n      title: 'Invalid input',\n      message: 'Please enter a valid search term.',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  showLoader();\n\n  try {\n    const images = await fetchImages(searchQuery);\n    if (images.length === 0) {\n      iziToast.error({\n        title: 'No results',\n        message: 'Sorry, no images found. Please try another search.',\n        position: 'topRight',\n      });\n    } else {\n      renderImg(images);\n    }\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    errorMessage();\n  } finally {\n    hideLoader();\n  }\n});\n"],"names":["API","MAIN_URL","fetchImages","searchQuery","axios","error","lightbox","SimpleLightbox","renderImg","images","gallery","showLoader","image","galleryItem","imgElement","linkElement","description","infoBox","hideLoader","loader","errorMessage","iziToast","form","event"],"mappings":"owBAEA,MAAMA,EAAM,qCACNC,EAAW,2BAEJC,EAAc,MAAMC,GAAe,CAC9C,GAAI,CAUF,OATiB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GACe,KAAK,IACtB,OAAQE,EAAO,CACd,QAAQ,IAAI,yBAA0BA,CAAK,CAC5C,CACD,MAAO,EACT,EChBMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,mBACd,gBAAiB,SACjB,aAAc,CAChB,CAAC,EAEYC,EAAYC,GAAU,CACjC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,GAEpBC,IAEIF,EAAO,SAAW,IAItBA,EAAO,QAAQG,GAAS,CACtB,MAAMC,EAAc,SAAS,cAAc,IAAI,EAC/CA,EAAY,UAAU,IAAI,cAAc,EAExC,MAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,IAAMF,EAAM,aACvBE,EAAW,IAAMF,EAAM,KAEvB,MAAMG,EAAc,SAAS,cAAc,GAAG,EAC9CA,EAAY,KAAOH,EAAM,cACzBG,EAAY,QAAQ,YAAcH,EAAM,KACxCG,EAAY,YAAYD,CAAU,EAElC,MAAME,EAAc,SAAS,cAAc,GAAG,EAC9CA,EAAY,UAAU,IAAI,aAAa,EACvCA,EAAY,YAAcJ,EAAM,KAEhC,MAAMK,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAAI,UAAU,EAChCA,EAAQ,UAAY;AAAA,4DACoCL,EAAM,KAAK;AAAA,4DACXA,EAAM,KAAK;AAAA,+DACRA,EAAM,QAAQ;AAAA,gEACbA,EAAM,SAAS;AAAA,MAG3EC,EAAY,YAAYE,CAAW,EACnCF,EAAY,YAAYI,CAAO,EAC/BP,EAAQ,YAAYG,CAAW,CACnC,CAAG,EAEDP,EAAS,QAAO,EAChBY,IACF,EAEaP,EAAa,IAAM,CAC9B,MAAMQ,EAAS,SAAS,eAAe,QAAQ,EAC/CA,EAAO,MAAM,QAAU,OACzB,EAEaD,EAAa,IAAM,CAC9B,MAAMC,EAAS,SAAS,eAAe,QAAQ,EAC/CA,EAAO,MAAM,QAAU,MACzB,EAEaC,EAAe,IAAM,CAChCC,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,UACd,CAAG,CACH,EChEMC,EAAO,SAAS,cAAc,OAAO,EAC3CA,EAAK,iBAAiB,SAAU,MAAMC,GAAS,CAC7CA,EAAM,eAAc,EAEpB,MAAMpB,EAAcoB,EAAM,OAAO,aAAa,EAAE,MAAM,OAChDb,EAAU,SAAS,cAAc,UAAU,EAEjD,GADAA,EAAQ,UAAY,GAChBP,IAAgB,GAAI,CACtBkB,EAAS,MAAM,CACb,MAAO,gBACP,QAAS,oCACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDV,IAEA,GAAI,CACF,MAAMF,EAAS,MAAMP,EAAYC,CAAW,EACxCM,EAAO,SAAW,EACpBY,EAAS,MAAM,CACb,MAAO,aACP,QAAS,qDACT,SAAU,UAClB,CAAO,EAEDb,EAAUC,CAAM,CAEnB,OAAQJ,EAAO,CACd,QAAQ,MAAM,yBAA0BA,CAAK,EAC7Ce,GACJ,QAAY,CACRF,GACD,CACH,CAAC"}